{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ramson/Developer/GitHub/production/grabDash-front-end/src/home/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { listDishes } from \"../utils/api\";\nimport DishCard from \"./DishCard\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\n\nfunction Home({\n  addToCart\n}) {\n  _s();\n\n  const [dishes, setDishes] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(loadDishes, []);\n\n  function loadDishes() {\n    const abortController = new AbortController();\n    setError(null);\n    listDishes(abortController.signal).then(setDishes).catch(setError);\n    return () => abortController.abort();\n  }\n\n  const cards = dishes.map(dish => /*#__PURE__*/_jsxDEV(DishCard, {\n    dish: dish,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => addToCart(dish),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"oi oi-plus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), \" Add to cart\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, dish.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"yTMuMCqZLzcLWbIo3xxSHgA4m0c=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/ramson/Developer/GitHub/production/grabDash-front-end/src/home/Home.js"],"names":["React","useEffect","useState","listDishes","DishCard","ErrorAlert","Home","addToCart","dishes","setDishes","error","setError","loadDishes","abortController","AbortController","signal","then","catch","abort","cards","map","dish","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA6B;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAACW,UAAD,EAAa,EAAb,CAAT;;AAEA,WAASA,UAAT,GAAsB;AACpB,UAAMC,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACAH,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAR,IAAAA,UAAU,CAACU,eAAe,CAACE,MAAjB,CAAV,CAAmCC,IAAnC,CAAwCP,SAAxC,EAAmDQ,KAAnD,CAAyDN,QAAzD;AACA,WAAO,MAAME,eAAe,CAACK,KAAhB,EAAb;AACD;;AAED,QAAMC,KAAK,GAAGX,MAAM,CAACY,GAAP,CAAYC,IAAD,iBACvB,QAAC,QAAD;AAAwB,IAAA,IAAI,EAAEA,IAA9B;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAMd,SAAS,CAACc,IAAD,CAA5D;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,KAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,UADY,CAAd;AAQA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEZ;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBAAsBS;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA3BQb,I;;KAAAA,I;AA6BT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { listDishes } from \"../utils/api\";\nimport DishCard from \"./DishCard\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\n\nfunction Home({ addToCart }) {\n  const [dishes, setDishes] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(loadDishes, []);\n\n  function loadDishes() {\n    const abortController = new AbortController();\n    setError(null);\n    listDishes(abortController.signal).then(setDishes).catch(setError);\n    return () => abortController.abort();\n  }\n\n  const cards = dishes.map((dish) => (\n    <DishCard key={dish.id} dish={dish}>\n      <button className=\"btn btn-primary\" onClick={() => addToCart(dish)}>\n        <span className=\"oi oi-plus\" /> Add to cart\n      </button>\n    </DishCard>\n  ));\n\n  return (\n    <main>\n      <ErrorAlert error={error} />\n      <div className=\"row\">{cards}</div>\n    </main>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}