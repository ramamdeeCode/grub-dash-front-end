{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ramson/Developer/GitHub/production/grabDash-front-end/main-front/src/dishes/DishEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport DishForm from \"./DishForm\";\nimport { readDish, updateDish } from \"../utils/api\";\n\nfunction DishEdit() {\n  _s();\n\n  const history = useHistory();\n  const {\n    dishId\n  } = useParams();\n  const [dish, setDish] = useState({});\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDish(dishId, abortController.signal).then(setDish).catch(setError);\n    return () => abortController.abort();\n  }, [dishId]);\n\n  function submitHandler(updatedDishOrder) {\n    updateDish(updatedDishOrder).then(() => history.push(`/dashboard`)).catch(setError);\n  }\n\n  function cancelHandler() {\n    history.goBack();\n  }\n\n  const child = dish.id ? /*#__PURE__*/_jsxDEV(DishForm, {\n    initialState: dish,\n    onCancel: cancelHandler,\n    onSubmit: submitHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Dish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorAlert, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), child]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DishEdit, \"t3tmgrVIFb9GeOzuVpzeOslKkUM=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = DishEdit;\nexport default DishEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"DishEdit\");","map":{"version":3,"sources":["/Users/ramson/Developer/GitHub/production/grabDash-front-end/main-front/src/dishes/DishEdit.js"],"names":["React","useEffect","useState","useHistory","useParams","ErrorAlert","DishForm","readDish","updateDish","DishEdit","history","dishId","dish","setDish","error","setError","abortController","AbortController","signal","then","catch","abort","submitHandler","updatedDishOrder","push","cancelHandler","goBack","child","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,cAArC;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAaP,SAAS,EAA5B;AAEA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACAV,IAAAA,QAAQ,CAACI,MAAD,EAASK,eAAe,CAACE,MAAzB,CAAR,CAAyCC,IAAzC,CAA8CN,OAA9C,EAAuDO,KAAvD,CAA6DL,QAA7D;AACA,WAAO,MAAMC,eAAe,CAACK,KAAhB,EAAb;AACD,GAJQ,EAIN,CAACV,MAAD,CAJM,CAAT;;AAMA,WAASW,aAAT,CAAuBC,gBAAvB,EAAyC;AACvCf,IAAAA,UAAU,CAACe,gBAAD,CAAV,CACGJ,IADH,CACQ,MAAMT,OAAO,CAACc,IAAR,CAAc,YAAd,CADd,EAEGJ,KAFH,CAESL,QAFT;AAGD;;AAED,WAASU,aAAT,GAAyB;AACvBf,IAAAA,OAAO,CAACgB,MAAR;AACD;;AAED,QAAMC,KAAK,GAAGf,IAAI,CAACgB,EAAL,gBACZ,QAAC,QAAD;AACE,IAAA,YAAY,EAAEhB,IADhB;AAEE,IAAA,QAAQ,EAAEa,aAFZ;AAGE,IAAA,QAAQ,EAAEH;AAHZ;AAAA;AAAA;AAAA;AAAA,UADY,gBAOZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAER;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGa,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAxCQlB,Q;UACSN,U,EACGC,S;;;KAFZK,Q;AA0CT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport DishForm from \"./DishForm\";\nimport { readDish, updateDish } from \"../utils/api\";\n\nfunction DishEdit() {\n  const history = useHistory();\n  const { dishId } = useParams();\n\n  const [dish, setDish] = useState({});\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDish(dishId, abortController.signal).then(setDish).catch(setError);\n    return () => abortController.abort();\n  }, [dishId]);\n\n  function submitHandler(updatedDishOrder) {\n    updateDish(updatedDishOrder)\n      .then(() => history.push(`/dashboard`))\n      .catch(setError);\n  }\n\n  function cancelHandler() {\n    history.goBack();\n  }\n\n  const child = dish.id ? (\n    <DishForm\n      initialState={dish}\n      onCancel={cancelHandler}\n      onSubmit={submitHandler}\n    />\n  ) : (\n    <p>Loading...</p>\n  );\n\n  return (\n    <main>\n      <h1>Edit Dish</h1>\n      <ErrorAlert error={error} />\n      {child}\n    </main>\n  );\n}\n\nexport default DishEdit;\n"]},"metadata":{},"sourceType":"module"}